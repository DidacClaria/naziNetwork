<!DOCTYPE html>
<html>
<head>
    <!-- FONTS -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Abhaya+Libre&family=Alatsi&family=Bebas+Neue&family=Poppins&family=Federant&display=swap" rel="stylesheet">
    <!-- LIBRARIES -->
    <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script type="text/javascript" src="https://unpkg.com/vis-network/standalone/umd/vis-network.min.js"></script>
    <script type="text/javascript" src="/js-colormaps.js"></script>

    <style type="text/css">

        body{
          background: #282828;
          font-family: "Bebas Neue";
        }

        .top-title {
          font-size:  288px;
          margin: 0px;
          margin-top: 10vh;
        }

        .bottom-title {
          font-size: 200px;
          margin: 0px;
          margin-top: -15vh;
          margin-left: 30vw;
        }

        #mynetwork {
            flex-grow: 2; /* default 0 */
        }

        #myCanvas {
          width: 60px;
          height: 60px;
        }

        .container {
          display: flex; /* or inline-flex */
          height: 100vh;
          width: 100vw;
        }

        #settings {
          box-shadow: 0px 0px 5px 0px rgba(0,0,0,0.25);
          width: 300px;
          background: white;
          border-radius: 20px;
          position: absolute;
          left: 0;
          height: 95%;
          margin: 20px;
        }

        #info-card {
          box-shadow: 0px 0px 5px 0px rgba(0,0,0,0.25);
          width: 300px;
          background: white;
          border-radius: 20px;
          position: absolute;
          right: 0;
          height: 95%;
          margin: 20px;
        }

        .circular--portrait {
          display: flex;
          align-items: center;
          justify-content: center;
          width: 150px;
          height: 150px;
          overflow: hidden;
          border-radius: 50%;
        }

        .circular--portrait img {
          width: 100%;
          height: 100%;
          object-fit: cover;
        }

        .headerLink {
          padding: 20px;
          color: white;
          font-size: 24px;
        }

        .headerLink:hover{
          transition: 0.3s;
          font-size: 28px;
          text-shadow: 2px 2px 8px white;
        }

        #legend {
          position: absolute;
          bottom: 5px;
          left: 310px;
        }

        #legendBar {
          height: 11px;
          width: 253px;
          border-radius: 71px;
        }

        #cardname {
          padding: 10px;
        }

        .language {
          padding: 10px;
          border-radius: 10px;
          box-shadow: 0px 0px 5px 0px lightgray;
          display: flex;
          margin-top: 10px;
        }

        .languageClicked {
          padding: 10px;
          border-radius: 10px;
          box-shadow: 0px 0px 5px 0px lightgray;
          display: flex;
          margin-top: 10px;
          background: cornflowerblue;
          color: white;
        }

        .flag {
          width: 32px;
          height: 32px;
          border-radius: 50px;
          border: 1px solid;
        }

        .subjectivityBar {
          width: 220px;
          height: 20px;
          border-radius: 50px;
          opacity: 0.8;
          align-self: center;
          margin-left: 10px;
        }

        a {
          text-decoration: none;
        }

        #info-card a {
          color: black;
        }

        #info-card a:hover {
          color: gray;
        }

        .header {
          font-size: 48px;
          line-height: 58px;
          color: white;
          height: 100px;
          display: flex;
          align-items: center;
          justify-content: center;
          border-radius: 10px;
          margin: 20px;
          box-shadow: 0px 0px 10px 0px;
        }

        .two-column {
          display: flex;
          flex-direction: row;
          margin: 40px;
          justify-content: center;
          gap: 20px;
        }

        .figure {
          flex: 1;
          text-align-last: center;
          align-self: center;
        }

        .text {
          flex: 1; 
          color: white;
          text-align: justify;
          font-family: "Poppins";
        }

        .logo-container {
          background: white;
          border-radius: 50px;
          width: 50px;
          height: 50px;
          box-shadow: 0px 0px 5px 0px gray;
          display: flex;
          justify-content: center;
          align-items: center;
        }

    </style>
</head>
<body>
<div class="container" style="flex-direction: column;">
    <div style="text-align: right;padding: 10px;">
        <a href="javascript:void(0);" onclick="document.getElementById('theproject').scrollIntoView();" class="headerLink">THE PROJECT</a>
        <a href="javascript:void(0);" onclick="document.getElementById('mynetwork').scrollIntoView();" class="headerLink">THE NETWORK</a>
        <a href="javascript:void(0);" onclick="document.getElementById('theresults').scrollIntoView();" class="headerLink">THE RESULTS</a>
    </div>
    <center>
        <h1 class="top-title">NEUTRALITY</h1>
        <h1 class="bottom-title">A CASE STUDY</h1>
    </center>
</div>
<div id="theproject" class="header">THE PROJECT</div>
<div class="container" style="display: flex; flex-direction: column; height: fit-content;">
  <div class="two-column">
    <div class="text">
      <h2>What are we looking at?</h2>
      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam ultricies libero quis urna fringilla finibus. Vivamus iaculis ipsum mauris, vitae convallis est dictum eget. Curabitur ut arcu sollicitudin, tincidunt purus quis, sodales odio. Fusce ut scelerisque odio. In dignissim a dolor et consectetur. Sed nec est diam. Vestibulum molestie eros vel libero iaculis, et consequat odio molestie. Sed ante nulla, elementum sit amet faucibus nec, malesuada ut mauris. Donec pulvinar odio nec urna viverra, quis elementum risus maximus. Curabitur eget aliquet magna. Curabitur ultricies lectus eget lacus accumsan, ac tempor justo ullamcorper. Fusce eget tellus ac velit placerat commodo eget at elit. Vestibulum vulputate magna vel commodo pretium. Ut ultrices molestie dolor vulputate viverra. Nulla convallis dignissim augue, eu ornare nunc bibendum sit amet. Suspendisse ut bibendum leo.</p>
    </div>
    <div class="figure">
      <iframe width="607px" height="340px"
      src="https://youtu.be/hIWkuD-2x5s">
      </iframe>
    </div>
  </div>
  <div class="two-column">
    <div class="figure">
      <img src="/images/pagesExtracted.png" width="75%"></img>
    </div>
    <div class="text">
      <h2>What are we looking at?</h2>
      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam ultricies libero quis urna fringilla finibus. Vivamus iaculis ipsum mauris, vitae convallis est dictum eget. Curabitur ut arcu sollicitudin, tincidunt purus quis, sodales odio. Fusce ut scelerisque odio. In dignissim a dolor et consectetur. Sed nec est diam. Vestibulum molestie eros vel libero iaculis, et consequat odio molestie. Sed ante nulla, elementum sit amet faucibus nec, malesuada ut mauris. Donec pulvinar odio nec urna viverra, quis elementum risus maximus. Curabitur eget aliquet magna. Curabitur ultricies lectus eget lacus accumsan, ac tempor justo ullamcorper. Fusce eget tellus ac velit placerat commodo eget at elit. Vestibulum vulputate magna vel commodo pretium. Ut ultrices molestie dolor vulputate viverra. Nulla convallis dignissim augue, eu ornare nunc bibendum sit amet. Suspendisse ut bibendum leo.</p>
    </div>
  </div>
  <div class="two-column">
    <div class="text">
      <h2>What are we looking at?</h2>
      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam ultricies libero quis urna fringilla finibus. Vivamus iaculis ipsum mauris, vitae convallis est dictum eget. Curabitur ut arcu sollicitudin, tincidunt purus quis, sodales odio. Fusce ut scelerisque odio. In dignissim a dolor et consectetur. Sed nec est diam. Vestibulum molestie eros vel libero iaculis, et consequat odio molestie. Sed ante nulla, elementum sit amet faucibus nec, malesuada ut mauris. Donec pulvinar odio nec urna viverra, quis elementum risus maximus. Curabitur eget aliquet magna. Curabitur ultricies lectus eget lacus accumsan, ac tempor justo ullamcorper. Fusce eget tellus ac velit placerat commodo eget at elit. Vestibulum vulputate magna vel commodo pretium. Ut ultrices molestie dolor vulputate viverra. Nulla convallis dignissim augue, eu ornare nunc bibendum sit amet. Suspendisse ut bibendum leo.</p>
    </div>
    <div class="figure">
      <img src="/images/authorCount.png" width="60%"></img>
    </div>
  </div>
   <div class="two-column">
    <div class="figure">
      <img src="/images/pageProtection.png" width="75%"></img>
    </div>
    <div class="text">
      <h2>What are we looking at?</h2>
      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam ultricies libero quis urna fringilla finibus. Vivamus iaculis ipsum mauris, vitae convallis est dictum eget. Curabitur ut arcu sollicitudin, tincidunt purus quis, sodales odio. Fusce ut scelerisque odio. In dignissim a dolor et consectetur. Sed nec est diam. Vestibulum molestie eros vel libero iaculis, et consequat odio molestie. Sed ante nulla, elementum sit amet faucibus nec, malesuada ut mauris. Donec pulvinar odio nec urna viverra, quis elementum risus maximus. Curabitur eget aliquet magna. Curabitur ultricies lectus eget lacus accumsan, ac tempor justo ullamcorper. Fusce eget tellus ac velit placerat commodo eget at elit. Vestibulum vulputate magna vel commodo pretium. Ut ultrices molestie dolor vulputate viverra. Nulla convallis dignissim augue, eu ornare nunc bibendum sit amet. Suspendisse ut bibendum leo.</p>
    </div>
  </div>
</div>
<div class="header">THE NETWORK</div>
<div class="container">
  <div id="mynetwork"></div>
  <div id="settings">
    <div style="padding: 0px 20px 20px 20px">
      <h1>Network Settings</h1>
      <div style="font-size: 1.17em;">Show</div>
      <hr>
      <input type="radio" id="colors" name="show" value="colors" onclick="changeNodeImage(this.value)">
      <label for="colors">Subjectivity Level</label><br>
      <input type="radio" id="pictures" name="show" value="pictures" onclick="changeNodeImage(this.value)">
      <label for="pictures">Pictures</label><br><br>

      <div style="font-size: 1.17em;">Change subjectivity language</div>
      <hr>
      <div id="eng" class="language" style="margin: 0px" value="english" onclick="changeLanguage(this.id)">
        <img src="https://upload.wikimedia.org/wikipedia/commons/thumb/f/f2/Flag_of_Great_Britain_%281707%E2%80%931800%29.svg/2560px-Flag_of_Great_Britain_%281707%E2%80%931800%29.svg.png" class="flag">
        <div style="align-self: center;padding-left: 15px;">ENGLISH</div>
      </div>
      <div id="ger" class="language" value="german" onclick="changeLanguage(this.id)">
        <img src="https://upload.wikimedia.org/wikipedia/en/thumb/b/ba/Flag_of_Germany.svg/1200px-Flag_of_Germany.svg.png" class="flag">
        <div style="align-self: center;padding-left: 15px;">GERMAN</div>
      </div>
      <div id="frc" class="language" value="french" onclick="changeLanguage(this.id)">
        <img src="https://upload.wikimedia.org/wikipedia/commons/3/3a/Flag_of_France_%281794%E2%80%931815%2C_1830%E2%80%931958%29.svg" class="flag">
        <div style="align-self: center;padding-left: 15px;">FRENCH</div>
      </div>
      <div id="ita" class="language" value="italian" onclick="changeLanguage(this.id)">
        <img src="https://upload.wikimedia.org/wikipedia/commons/thumb/0/03/Flag_of_Italy.svg/2560px-Flag_of_Italy.svg.png" class="flag">
        <div style="align-self: center;padding-left: 15px;">ITALIAN</div>
      </div>
      <div id="pol" class="language" value="polish" onclick="changeLanguage(this.id)">
        <img src="https://upload.wikimedia.org/wikipedia/en/thumb/1/12/Flag_of_Poland.svg/1200px-Flag_of_Poland.svg.png" class="flag">
        <div style="align-self: center;padding-left: 15px;">POLISH</div>
      </div>

    </div>
    <div id="legend">
      <center style="color:white">Subjectivity level</center>
      <img src="/images/colorLegend.png" id="legendBar"></img>
      <div style="display: flex;justify-content: space-between; color: white;">
        <span>0</span>
        <span>1</span>
      </div>
    </div>  
  </div>
  <div id="info-card" style="display: none">
    <img src="https://www.svgrepo.com/show/83454/cross.svg" onclick="toggleInfoCard();" width="12" height="12" style="padding-top: 20px;padding-left: 20px;position: absolute; top:0%;">
    <center style="padding:20px">
      <div class="circular--portrait">
        <img id="info-card-img" src="" onerror="this.src='https://t4.ftcdn.net/jpg/00/64/67/63/360_F_64676383_LdbmhiNM6Ypzb3FM4PPuFP9rHe7ri8Ju.jpg';"></img>
      </div>
      <div id='cardname' style="font-size: 2em;"></div>
      <div style="text-align-last: left;">Article Attributes</div>
      <hr style="margin-top: 0px;">
      <div style="display:flex; justify-content: space-between;">
        <span>Edit Permissions</span>
        <span id="editpermissions">Blue Lock</span>
      </div>
      <div style="display:flex; justify-content: space-between;">
        <span>Number of authors</span>
        <span id="numAuthors">1000</span>
      </div>
      <div style="display:flex; justify-content: space-between;">
        <span>Number of sources</span>
        <span id="numSources">100</span>
      </div>      
      <br>
      <div style="text-align-last: left;">Subjectivity levels</div>
      <hr style="margin-top: 0px;">
      <div style="display:flex; flex-direction: column; row-gap: 15px; margin-top: 20px;">
        <div id="engSubjCard" style="display:flex; flex-direction: row;">
          <img src="https://upload.wikimedia.org/wikipedia/commons/thumb/f/f2/Flag_of_Great_Britain_%281707%E2%80%931800%29.svg/2560px-Flag_of_Great_Britain_%281707%E2%80%931800%29.svg.png" class="flag">
          <div id="engSubj" class="subjectivityBar"></div>
        </div>
        <div id="gerSubjCard" style="display:flex; flex-direction: row;">
          <img src="https://upload.wikimedia.org/wikipedia/en/thumb/b/ba/Flag_of_Germany.svg/1200px-Flag_of_Germany.svg.png" class="flag">
          <div id="gerSubj" class="subjectivityBar"></div>
        </div>
        <div id="frcSubjCard" style="display:flex; flex-direction: row;">
          <img src="https://upload.wikimedia.org/wikipedia/commons/3/3a/Flag_of_France_%281794%E2%80%931815%2C_1830%E2%80%931958%29.svg" class="flag">
          <div id="frcSubj" class="subjectivityBar"></div>
        </div>
        <div id="itaSubjCard" style="display:flex; flex-direction: row;">
          <img src="https://upload.wikimedia.org/wikipedia/commons/thumb/0/03/Flag_of_Italy.svg/2560px-Flag_of_Italy.svg.png" class="flag">
          <div id="itaSubj" class="subjectivityBar"></div>
        </div>
        <div id="polSubjCard" style="display:flex; flex-direction: row;">
          <img src="https://upload.wikimedia.org/wikipedia/en/thumb/1/12/Flag_of_Poland.svg/1200px-Flag_of_Poland.svg.png" class="flag">
          <div id="polSubj" class="subjectivityBar"></div>
        </div>
      </div>
    </center>
  </div>
</div>
<div id="theresults" class="header" >THE RESULTS</div>
<div class="container" style="display: flex; flex-direction: column; height: fit-content;">
  <div class="two-column">
    <div class="figure">
      <img src="/images/pagesExtracted.png" width="75%"></img>
    </div>
    <div class="text">
      <h2>What are we looking at?</h2>
      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam ultricies libero quis urna fringilla finibus. Vivamus iaculis ipsum mauris, vitae convallis est dictum eget. Curabitur ut arcu sollicitudin, tincidunt purus quis, sodales odio. Fusce ut scelerisque odio. In dignissim a dolor et consectetur. Sed nec est diam. Vestibulum molestie eros vel libero iaculis, et consequat odio molestie. Sed ante nulla, elementum sit amet faucibus nec, malesuada ut mauris. Donec pulvinar odio nec urna viverra, quis elementum risus maximus. Curabitur eget aliquet magna. Curabitur ultricies lectus eget lacus accumsan, ac tempor justo ullamcorper. Fusce eget tellus ac velit placerat commodo eget at elit. Vestibulum vulputate magna vel commodo pretium. Ut ultrices molestie dolor vulputate viverra. Nulla convallis dignissim augue, eu ornare nunc bibendum sit amet. Suspendisse ut bibendum leo.</p>
    </div>
  </div>
  <div class="two-column">
    <div class="figure">
      <img src="/images/pagesExtracted.png" width="75%"></img>
    </div>
    <div class="text">
      <h2>What are we looking at?</h2>
      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam ultricies libero quis urna fringilla finibus. Vivamus iaculis ipsum mauris, vitae convallis est dictum eget. Curabitur ut arcu sollicitudin, tincidunt purus quis, sodales odio. Fusce ut scelerisque odio. In dignissim a dolor et consectetur. Sed nec est diam. Vestibulum molestie eros vel libero iaculis, et consequat odio molestie. Sed ante nulla, elementum sit amet faucibus nec, malesuada ut mauris. Donec pulvinar odio nec urna viverra, quis elementum risus maximus. Curabitur eget aliquet magna. Curabitur ultricies lectus eget lacus accumsan, ac tempor justo ullamcorper. Fusce eget tellus ac velit placerat commodo eget at elit. Vestibulum vulputate magna vel commodo pretium. Ut ultrices molestie dolor vulputate viverra. Nulla convallis dignissim augue, eu ornare nunc bibendum sit amet. Suspendisse ut bibendum leo.</p>
    </div>
  </div>
</div>
<div style="height: 1px; background: white; opacity: 0.1;"></div>
<div class="text" style="display: flex; flex-direction: column; align-items: center; justify-content: center; gap: 20px; margin: 20px">
  <div style="display: flex;flex-direction: row;align-items: center; gap: 40px">
    <div>The full explainer notebook with all the process can be found here:</div>
    <a target='_blank' href='https://deepnote.com/project/Project-Assignment-QM4sfXpEQiGVnfj_Jvt8gA/%2FFINAL%20DELIVERABLE%2FExplainer_notebook.ipynb'>
      <div class="logo-container">
        <img src="https://res.cloudinary.com/crunchbase-production/image/upload/c_lpad,f_auto,q_auto:eco,dpr_1/mskeswxmzvkxizuuqvmy" width="30px"></img>
      </div>
    </a>
  </div>
  <div style="display: flex;flex-direction: row;align-items: center; gap: 40px">
    <div>The data extracted and used for this visualization can be found here:</div>
      <a id="downloadDataset" target='_blank' href='/data/nazi_attributes.csv'>
        <div class="logo-container">
          <img src="https://cdn-icons.flaticon.com/png/512/3121/premium/3121602.png?token=exp=1638925849~hmac=39e8772be4398be608c9c97b091cb9b1" width="30px"></img>
        </div>
      </a>
    </div>
  </div>
</div>


<script type="text/javascript">

    $(document).ready(function() {
          document.getElementById('eng').className = 'languageClicked';      
          document.getElementById('colors').checked = true;
    });

    function buildSocialNodesAndEdges(){
      <% @nazisNodes.each do |node| %>
        v = <%= node['Subjectivity Level'].to_f %>;
        engSubjectivity = v/<%= @maxSubjectivity %>;
        engSubjectivityMapping = "rgb("+evaluate_cmap(engSubjectivity, 'RdYlGn', true).toString()+")";
        gerSubjectivity = v/<%= @maxSubjectivity %>;
        gerSubjectivityMapping = "rgb("+evaluate_cmap(gerSubjectivity, 'RdYlGn', true).toString()+")";
        frcSubjectivity = v/<%= @maxSubjectivity %>;
        frcSubjectivityMapping = "rgb("+evaluate_cmap(frcSubjectivity, 'RdYlGn', true).toString()+")";
        itaSubjectivity = v/<%= @maxSubjectivity %>;
        itaSubjectivityMapping = "rgb("+evaluate_cmap(itaSubjectivity, 'RdYlGn', true).toString()+")";
        polSubjectivity = v/<%= @maxSubjectivity %>;
        polSubjectivityMapping = "rgb("+evaluate_cmap(polSubjectivity, 'RdYlGn', true).toString()+")";
        <% 
          name = node['Name']
          name = name.gsub("_"," ")
          @image = "images/nazi_images/"+node['Name']+".png"
          if (! File.exist?(Rails.public_path+@image))
            @image = "https://t4.ftcdn.net/jpg/00/64/67/63/360_F_64676383_LdbmhiNM6Ypzb3FM4PPuFP9rHe7ri8Ju.jpg"
          end
        %>
        socialNodes.add({
            id: '<%= node['Name'] %>',
            shape: 'dot',
            // shape: 'circularImage',
            image: "<%= @image %>",
            color: {
              background: engSubjectivityMapping,
              border: engSubjectivityMapping,
              highlight:{
                background: engSubjectivityMapping,
                border: "white"
              } 
            },
            label: '<%= name %>',
            permissions: 'Blue Lock',
            numAuthors: '1000',
            numSources: '120',
            engSubjectivity: engSubjectivity,
            engSubjectivityMapping: engSubjectivityMapping,
            gerSubjectivity: gerSubjectivity,
            gerSubjectivityMapping: gerSubjectivityMapping,
            frcSubjectivity: frcSubjectivity,
            frcSubjectivityMapping: frcSubjectivityMapping,
            itaSubjectivity: itaSubjectivity,
            itaSubjectivityMapping: itaSubjectivityMapping,
            polSubjectivity: polSubjectivity,
            polSubjectivityMapping: polSubjectivityMapping
        });
      <% end %>

      <% @nazisLinks.each do |link| %>
        socialEdges.add({from: '<%= link['Source Node']%>', to: '<%=link['Target Node']%>'});
      <% end %>
    }

    function buildGCCNodes(){

        <% @nazisNodesGCC.each do |node| %>
            GCCnodes.add({
                id: '<%= node['0'] %>',
                shape: 'circularImage',
                image: '/Hitler_portrait_crop.jpeg',
                label: '<%= node['0'] %>',
                widthMin: 20,
                widthMax: 20
            });
        <% end %>
    }

    var socialNodes = new vis.DataSet([]);
    var socialEdges = new vis.DataSet([]);
    buildSocialNodesAndEdges();

    var GCCnodes = new vis.DataSet([]);
    buildGCCNodes();
    
    var nodes = socialNodes;
    var edges = socialEdges;
    var network, allNodes;
    var highlightActive = false;

    function redrawAll() {
      var container = document.getElementById("mynetwork");
      var options = {
        nodes:{
          borderWidth: 0,
          borderWidthSelected: 3,
          brokenImage: "https://t4.ftcdn.net/jpg/00/64/67/63/360_F_64676383_LdbmhiNM6Ypzb3FM4PPuFP9rHe7ri8Ju.jpg",
          fixed: false,
          font: {
            color: '#343434',
            size: 14, // px
            face: 'Federant',
          },
          opacity: 0.8,
          scaling: {
            label: true
          },
          shadow: true,
          shapeProperties: {
            interpolation: false    // 'true' for intensive zooming
          }
        },
        edges:{
          color: {
            // color: 'white',
            opacity:0.2
          },
          selectionWidth: 50,
          width: 0.5,
          smooth: {
            forceDirection: "none"
          }
        },
        // STABILIZATION PROCESS SHOWN
        physics: {
          stabilization: false,
          barnesHut: {
            gravitationalConstant: -80000,
            springConstant: 0.001,
            springLength: 200,
            avoidOverlap: 0.5
          },
        },
        layout: {
          improvedLayout:false
        }

      };

      var data = {
        nodes: nodes,
        edges: edges
      };

      network = new vis.Network(container, data, options);

      // get a JSON object
      allNodes = nodes.get({ returnType: "Object" });

      // SET NODE SIZE ACCORDING TO THE DEGREE
      updateNodeSize();
      
      // LISTENERS FOR NODE CLICK ACTION
      network.on('click', function(properties) {
          neighbourhoodHighlight(properties);
          toggleInfoCard(properties);
      });

      fitAnimated();

    }

    function fitAnimated() {
      offsetx = 0;
      offsety = 0;
      duration = 1000;
      scale = 0.04;
      positionx = 300;
      positiony = 300;
      easingFunction = 'easeInOutQuad';

      var options = {
        position: { x: positionx, y: positiony },
        scale: scale,
        offset: { x: offsetx, y: offsety },
        animation: {
          duration: duration,
          easingFunction: easingFunction,
        },
      };

      network.moveTo(options);
    }

    function updateNodeSize(){
      for (var nodeId in allNodes) {
        allNodes[nodeId].size = 5*network.getConnectedEdges(nodeId).length;
        //allNodes[nodeId].mass = network.getConnectedEdges(nodeId).length+1;
      }
      // transform the object into an array
      var updateArray = [];
      for (nodeId in allNodes) {
        if (allNodes.hasOwnProperty(nodeId)) {
          updateArray.push(allNodes[nodeId]);
        }
      }
      nodes.update(updateArray);
    }

    function neighbourhoodHighlight(params) {
        // if something is selected:
        if (params && params.nodes.length > 0) {
          highlightActive = true;
          var i, j;
          var selectedNode = params.nodes[0];
          var degrees = 2;

          // mark all nodes as hard to read.
          for (var nodeId in allNodes) {
            allNodes[nodeId].opacity = 0.1;
          }
          var connectedNodes = network.getConnectedNodes(selectedNode);
          var allConnectedNodes = [];

          // get the second degree nodes
          for (i = 1; i < degrees; i++) {
            for (j = 0; j < connectedNodes.length; j++) {
              allConnectedNodes = allConnectedNodes.concat(
                network.getConnectedNodes(connectedNodes[j])
              );
            }
          }

          // all second degree nodes get a different color and their label back
          for (i = 0; i < allConnectedNodes.length; i++) {
            allNodes[nodeId].opacity = 0.8;
          }

          // all first degree nodes get their own color and their label back
          for (i = 0; i < connectedNodes.length; i++) {
            allNodes[connectedNodes[i]].opacity = 0.8;
          }

          // the main node gets its own color and its label back.
          allNodes[selectedNode].opacity = 0.8;
          
        } else if (highlightActive === true) {
          // reset all nodes
          for (var nodeId in allNodes) {
            allNodes[nodeId].opacity = 0.8;
            allNodes[nodeId].selectedNode = null;
          }

          highlightActive = false;
        }

        // transform the object into an array
        var updateArray = [];
        for (nodeId in allNodes) {
          if (allNodes.hasOwnProperty(nodeId)) {
            updateArray.push(allNodes[nodeId]);
          }
        }
        nodes.update(updateArray);
    }

    function toggleInfoCard(properties){
        if (properties && nodes.get(properties.nodes) != ""){
          //SET INFO ABOUT NAME AND PICTURE
          var clickedNodes = nodes.get(properties.nodes);
          $('#info-card-img').attr("src",clickedNodes[0]['image']);
          $('#cardname').html("<a href='https://wikipedia.org/wiki/"+clickedNodes[0]['label']+"' target='_blank'>"+clickedNodes[0]['label']+"</a>");

          //SET ARTICLE ATTRIBUTES
          $('#permissions').text(clickedNodes[0]['permissions']);
          $('#numAuthors').text(clickedNodes[0]['numAuthors']);
          $('#numSources').text(clickedNodes[0]['numSources']);

          //SET SUBJECTIVITY BARS VALUES AND COLORS
          var engSubjectivityScaled = clickedNodes[0]['engSubjectivity'] * 220;
          $('#engSubj').css({'background': clickedNodes[0]['engSubjectivityMapping'],
                              'width': engSubjectivityScaled+"px"});
          if (clickedNodes[0]['engSubjectivity'] == 0){
              $('#engSubjCard').css('display','none');
          }
          var gerSubjectivityScaled = clickedNodes[0]['gerSubjectivity'] * 220;
          $('#gerSubj').css({'background': clickedNodes[0]['gerSubjectivityMapping'],
                              'width': gerSubjectivityScaled+"px"});
          if (clickedNodes[0]['gerSubjectivity'] == 0){
              console.log(clickedNodes[0]['gerSubjectivity']);
              $('#gerSubjCard').css('display','none');
          }
          var frcSubjectivityScaled = clickedNodes[0]['frcSubjectivity'] * 220;
          $('#frcSubj').css({'background': clickedNodes[0]['frcSubjectivityMapping'],
                              'width': frcSubjectivityScaled+"px"});
          if (clickedNodes[0]['frcSubjectivity'] == 0){
              $('#frcSubjCard').css('display','none');
          }
          var itaSubjectivityScaled = clickedNodes[0]['itaSubjectivity'] * 220;
          $('#itaSubj').css({'background': clickedNodes[0]['itaSubjectivityMapping'],
                              'width': itaSubjectivityScaled+"px"});
          if (clickedNodes[0]['itaSubjectivity'] == 0){
              $('#itaSubjCard').css('display','none');
          }
          var polSubjectivityScaled = clickedNodes[0]['polSubjectivity'] * 220;
          $('#polSubj').css({'background': clickedNodes[0]['polSubjectivityMapping'],
                              'width': polSubjectivityScaled+"px"});
          if (clickedNodes[0]['polSubjectivity'] == 0){
              $('#polSubjCard').css('display','none');
          }

          $('#info-card').fadeIn();
        }
        else {
          //EVERYTHING IS RESET
          $('#info-card').fadeOut();
          $('#cardname').text('');
          $('#info-card').promise().done(function(){
              // will be called when all the animations finish
              $('#info-card-img').attr("src",'https://t4.ftcdn.net/jpg/00/64/67/63/360_F_64676383_LdbmhiNM6Ypzb3FM4PPuFP9rHe7ri8Ju.jpg');
          });
          $('#engSubjCard').css('display','flex');
          $('#gerSubjCard').css('display','flex');
          $('#frcSubjCard').css('display','flex');
          $('#itaSubjCard').css('display','flex');
          $('#polSubjCard').css('display','flex');

        }
    }

    function changeNodeImage(value){
      if (value == "pictures"){
        for (var nodeId in allNodes) {
            allNodes[nodeId].shape = 'circularImage';
        }
      }
      else{
        for (var nodeId in allNodes) {
            allNodes[nodeId].shape = 'dot';
        }
      }

      var updateArray = [];
      for (nodeId in allNodes) {
        if (allNodes.hasOwnProperty(nodeId)) {
          updateArray.push(allNodes[nodeId]);
        }
      }
      nodes.update(updateArray);

    }

    function changeLanguage(id){
      document.getElementsByClassName('languageClicked')[0].className = 'language';
      document.getElementById(id).className = 'languageClicked';

      if (id == "eng"){
        for (var nodeId in allNodes) {
          allNodes[nodeId].color = {background: allNodes[nodeId].engSubjectivityMapping, border: allNodes[nodeId].engSubjectivityMapping, highlight: {background: allNodes[nodeId].engSubjectivityMapping, border: "white"}};
        }
      }
      else if (id == "ger"){
        for (var nodeId in allNodes) {
          allNodes[nodeId].color = {background: allNodes[nodeId].gerSubjectivityMapping, border: allNodes[nodeId].gerSubjectivityMapping, highlight: {background: allNodes[nodeId].gerSubjectivityMapping, border: "white"}};
        }
      }
      else if (id == "frc"){
        for (var nodeId in allNodes) {
          allNodes[nodeId].color = {background: allNodes[nodeId].frcSubjectivityMapping, border: allNodes[nodeId].frcSubjectivityMapping, highlight: {background: allNodes[nodeId].frcSubjectivityMapping, border: "white"}};
        }
      }
      else if (id == "ita"){
        for (var nodeId in allNodes) {
          allNodes[nodeId].color = {background: allNodes[nodeId].itaSubjectivityMapping, border: allNodes[nodeId].itaSubjectivityMapping, highlight: {background: allNodes[nodeId].itaSubjectivityMapping, border: "white"}};
        }
      }
      else if (id == "pol"){
        for (var nodeId in allNodes) {
          allNodes[nodeId].color = {background: allNodes[nodeId].polSubjectivityMapping, border: allNodes[nodeId].polSubjectivityMapping, highlight: {background: allNodes[nodeId].polSubjectivityMapping, border: "white"}};
        }
      }
      
      var updateArray = [];
      for (nodeId in allNodes) {
        if (allNodes.hasOwnProperty(nodeId)) {
          updateArray.push(allNodes[nodeId]);
        }
      }
      nodes.update(updateArray);

    }

    redrawAll();


</script>
</body>
</html>
